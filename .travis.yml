cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/pyenv
matrix:
  include:
    - os: linux
      dist: focal
      sudo: required
      env: PYTHON_CONFIGURE_OPTS="--enable-shared"
    - os: linux
      dist: bionic
      sudo: required
      env: PYTHON_CONFIGURE_OPTS="--enable-shared"
    - os: linux
      dist: xenial
      sudo: required
      env: PYTHON_CONFIGURE_OPTS="--enable-shared"
    # macOS 10.15
    - os: osx
      osx_image: xcode11.5
      env: PYTHON_CONFIGURE_OPTS="--enable-framework"
    # macOS 10.14
    - os: osx
      osx_image: xcode11.3
      env: PYTHON_CONFIGURE_OPTS="--enable-framework"
    # macOS 10.13
    - os: osx
      osx_image: xcode10.1
      env: PYTHON_CONFIGURE_OPTS="--enable-framework"
install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then sw_vers; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt-get -y update; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt-get -y install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then curl -L --create-dirs -o ~/bin/linuxdeploy https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then chmod +x ~/bin/linuxdeploy; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then linuxdeploy --version; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then curl -L --create-dirs -o ~/bin/appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then chmod +x ~/bin/appimagetool; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then appimagetool --version; fi
  - rm -rf ~/.pyenv
  - git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  - mkdir -p ~/.cache/pyenv/versions
  - ln -s ~/.cache/pyenv/versions ~/.pyenv/versions
  - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
  - echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
  - echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile
  - source ~/.bash_profile
  - pyenv --version
  - pyenv install --list
  - pyenv versions
  - pyenv install --skip-existing 2.7.18
  - pyenv install --skip-existing 3.8.6
  - pyenv install --skip-existing 3.7.9
  - pyenv install --skip-existing 3.6.12
  - pyenv rehash
  - pyenv global 2.7.18 3.8.6 3.7.9 3.6.12
  - pyenv versions
  - which python && python --version
  - which python2 && python2 --version
  - which python2.7 && python2.7 --version
  - which python3 && python3 --version
  - which python3.8 && python3.8 --version
  - which python3.7 && python3.7 --version
  - which python3.6 && python3.6 --version
  - python2 -m pip install --upgrade setuptools pip
  - python3 -m pip install --upgrade setuptools pip tox coveralls
script:
  - make test
  - make all
  - dist/Tahoe-LAFS/tahoe --version-and-path
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then xvfb-run -a dist/Gridsync/gridsync --version; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then xvfb-run -a dist/Gridsync.AppImage --version; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then dist/Gridsync.app/Contents/MacOS/Gridsync --version; fi
after_success:
  - coveralls
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then python scripts/upload_artifacts.py dist/Gridsync.tar.gz; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then python scripts/upload_artifacts.py dist/Gridsync.dmg; fi
notifications:
  email: false
  irc:
    channels: "chat.freenode.net#gridsync"
    skip_join: true
    use_notice: true
    template:
      - "[%{repository_name}:%{branch}] %{commit}: %{commit_subject} (%{author}) %{message}"
      - "Details: %{build_url} | Changes: %{compare_url}"
